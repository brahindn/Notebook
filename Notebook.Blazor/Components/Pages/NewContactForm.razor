@page "/contacts/addContactForm"

@using Notebook.Domain.Requests
@inject NavigationManager NavigationManager
@inject HttpClient httpClient

@rendermode InteractiveServer

<MudStack Justify="Justify.Center">
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="mudForm" @bind-IsValid="_isValid" Model="@_newContact">
                <MudTextField Label="First Name" @bind-Value="_newContact.FirstName" For="@(() => _newContact.FirstName)"
                    Required="true" RequiredError="First name is required!" />
                <MudTextField Label="Last Name" @bind-Value="_newContact.LastName" For="@(() => _newContact.LastName)"
                    Required="true" RequiredError="Last name is required!" />
                <MudTextField Label="Phone number" @bind-Value="_newContact.PhoneNumber" For="@(() => _newContact.PhoneNumber)"
                    Required="true" RequiredError="Phone number is required!" />
                <MudTextField Label="Email" @bind-Value="_newContact.Email" For="@(() => _newContact.Email)" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <div style="display:flex; justify-content: flex-end;">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@((e) => AddContact())">Add</MudButton>
                <div style="margin-left: 1rem;"/>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@((e) => Back())">Cancel</MudButton>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem>
        
    </MudItem>
</MudStack>

<MudTable Items="@_recentContacts">
    <ToolBarContent>
        <MudText>Recently added contacts</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Phone number</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Date of Birth</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="First Name">@context.FirstName</MudTd>
        <MudTd DataLabel="Last Name">@context.LastName</MudTd>
        <MudTd DataLabel="Phone number">@context.PhoneNumber</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Data of Birth">@context.DateOfBirth</MudTd>
    </RowTemplate>
</MudTable>

@code
{
    private MudForm? mudForm;
    private bool _isValid;
    private ContactForCreateDTO _newContact = new ContactForCreateDTO();
    private Uri? _addContactUri;

    private List<ContactForCreateDTO> _recentContacts = new();

    protected override async Task OnInitializedAsync()
    {
        const string addContactControllerUri = "/api/contacts/add";
        _addContactUri = new Uri(httpClient.BaseAddress!, addContactControllerUri);
    }

    private async Task Back()
    {
        if (_isValid)
        {
            await mudForm!.ResetAsync();
        }
        else
        {
            NavigationManager.NavigateTo("/contacts");
        }
    }

    private async Task AddContact()
    {
        var response = await httpClient.PostAsJsonAsync(_addContactUri, _newContact);

        if (response.IsSuccessStatusCode)
        {
            _recentContacts.Add(_newContact);
            _newContact = new ContactForCreateDTO();
        }
    }
}