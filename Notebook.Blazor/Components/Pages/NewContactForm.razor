@page "/contacts/addContactForm"
@using Notebook.Domain.Requests
@using System.Text.Json
@using System.Configuration
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject IConfiguration configuration
@rendermode InteractiveServer

<MudGrid Justify="Justify.Center">
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm Model = "newContact" @ref="form" @bind-IsValis="@success" @bind-Errors="@errors">
                <DataAnnotationsValidator/>
                <ValidationSummary/>

                <MudTextField @bind-Value="newContact.FirstName" Label="First Name" Required="true" RequiredError="First name is required!" />
                <MudTextField @bind-Value="newContact.LastName" Label="Last Name" Required="true" RequiredError="Last name is required!" />
                <MudTextField @bind-Value="newContact.PhoneNumber" Label="Phone number" Required="true" RequiredError="Phone number is required!" />
                <MudTextField @bind-Value="newContact.Email" Label="Email" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <div style="display:flex; justify-content: flex-end;">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@((e) => AddContact())">Add</MudButton>
                <div style="margin-left: 1rem;"/>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="@((e) => Back())">Cancel</MudButton>
            </div>
        </MudPaper>

        <h4>Recent Contacts</h4>

        @if(recentContacts is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <MudTable Items="@recentContacts" Hover="true", Striped="true">
                <HeaderContent>
                    <MudTh>First Name</MudTh>
                    <MudTh>Last Name</MudTh>
                    <MudTh>Phone number</MudTh>
                    <MudTh>Email</MudTh>
                    <MudTh>Date of Birthday</MudTh>
                </HeaderContent>
                <RowTemplate>
                    @foreach(var contact in recentContacts)
                    {
                        <MudTd DataLabel="First Name">@contact.FirstName</MudTd>
                        <MudTd DataLabel="Last Name">@contact.LastName</MudTd>
                        <MudTd DataLabel="Phone number">@contact.PhoneNumber</MudTd>
                        <MudTd DataLabel="Email">@contact.Email</MudTd>
                        <MudTd DataLabel="Date of Birth">@contact.DateOfBirth</MudTd>
                    }
                </RowTemplate>
            </MudTable>
        }
    </MudItem>
</MudGrid>


@code
{
    ContactForCreateDTO newContact = new ContactForCreateDTO();
    private List<ContactForCreateDTO> recentContacts;
    bool success = false;
    string[] errors = { };
    string addContactUri = "contacts/add";
    MudForm form = new MudForm();

    private void Back()
    { 
        NavigationManager.NavigateTo("/contacts");
    }

    private async Task AddContact()
    {
        var addContactUri = new Uri(httpClient.BaseAddress, "contacts/add");
        var response = await httpClient.PostAsJsonAsync(addContactUri, newContact);

        if(response.IsSuccessStatusCode)
        {
            recentContacts.Add(newContact);

            newContact.FirstName = string.Empty;
            newContact.LastName = string.Empty;
            newContact.PhoneNumber = string.Empty;
            newContact.Email = string.Empty;
        }
    }
}